use wolfram_library_link::{
    self as wll,
    wstp::{self, Link},
};

wll::export_wstp![
    test_wstp_fn_empty;
    test_wstp_fn_panic_immediately;
    test_wstp_fn_panic_immediately_with_formatting;
    test_wstp_fn_poison_link_and_panic;
];

fn test_wstp_fn_empty(_link: &mut Link) {
    // Do nothing.
}

fn test_wstp_fn_panic_immediately(_link: &mut Link) {
    panic!("successful panic")
}

fn test_wstp_fn_panic_immediately_with_formatting(_link: &mut Link) {
    panic!("successful {} panic", "formatted")
}

/// Test that the wrapper function generated by `export_wstp!` will check for and clear
/// any link errors that might have occurred within the user code.
fn test_wstp_fn_poison_link_and_panic(link: &mut Link) {
    // Cause a link failure by trying to Get the wrong head.
    assert!(link.test_head("NotTheRightHead").is_err());

    // Assert that the link now has an uncleared error.
    assert_eq!(link.error().unwrap().code(), Some(wstp::sys::WSEGSEQ));

    // Verify that trying to do an operation on the link returns the same error as
    // `link.error()`.
    assert_eq!(
        link.put_str("some result").unwrap_err().code(),
        Some(wstp::sys::WSEGSEQ)
    );

    // Panic while leaving the link in the error state.
    panic!("successful panic")
}
